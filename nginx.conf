events {
    worker_connections 1024;  # Adequate number of worker connections
}

http {
    # Performance and protocol-related settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;  # Keep connections alive for 65 seconds
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;  # Include MIME types
    default_type application/octet-stream;  # Default MIME type

    # Logging settings
    access_log /var/log/nginx/access.log;  # Access log location
    error_log /var/log/nginx/error.log;  # Error log location

    # Gzip compression settings
    gzip on;
    gzip_disable "msie6";  # Disable gzip for very old browsers

    # Server block for handling HTTP requests
    server {
    listen 80;
    server_name erdyssa.com;
    return 301 https://$server_name$request_uri;  # Redirect HTTP to HTTPS
    }

    server {
        listen 443 ssl;
        server_name erdyssa.com;

        ssl_certificate /etc/nginx/ssl/erdyssa.com.crt;  # Path to your SSL certificate
        ssl_certificate_key /etc/nginx/ssl/erdyssa.com.key;  # Path to your SSL certificate key
        ssl_protocols TLSv1.2 TLSv1.3;  # Recommended protocols
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';  # Strong ciphers
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://app:5000;  # Adjust if your app is running on a different port or host
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }


    # Additional configurations for HTTPS could be added here
}
